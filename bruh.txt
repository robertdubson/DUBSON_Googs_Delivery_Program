public interface IRepository<EntityName> 
    {
        

        void Add(EntityName example);
        
        EntityName GetByID(int ID);

        void Update(EntityName example);

        void Delete(int ID);

    }

public class TransportRepository : IRepository<TransportEntity>
    {
        public List<TransportEntity> EntitiesFromDataSourse;

        //List<TransportEntity> IRepository<TransportEntity>.EntitiesFromDataSourse { get => throw new NotImplementedException(); set => throw new NotImplementedException(); }

        public void Add(TransportEntity example)
        {
            EntitiesFromDataSourse.Add(example);
        }

        public void Delete(int ID)
        {
            EntitiesFromDataSourse.Remove(EntitiesFromDataSourse.Find(transport => transport.ID == ID));
        }

        public TransportEntity GetByID(int ID) 
        {
            return EntitiesFromDataSourse.Find(transport => transport.ID == ID);        
        }

        public void Update(TransportEntity example)
        {
            EntitiesFromDataSourse.Remove(EntitiesFromDataSourse.Find(transport => transport.ID == example.ID));
            EntitiesFromDataSourse.Add(example);
        }
    }